; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html

[platformio]
description = 
	A Kalman filter based algorithm that uses rate-sensors to propagate attitude 
	(roll, pitch, and heading angles) forward in time and accelerometers and 
	magnetometers as references, to correct for bias in the rate-sensor signal.
	Additionally, the algorithm uses accelerometer data to propagate velocity and 
	position and velocity (in the North/East/Down-Frame) and GPS data to correct 
	for errors and estimate bias in the accelerometer signals. 
[env:OpenRTK]
platform = aceinna_imu
board = OpenRTK
lib_archive = false
;extra_scripts = foreach_inc.py
lib_deps = OpenRTK-base-library@1.0.0
build_flags =
    -I lib_inc
	-I lib_inc/arch
	-I lib_inc/Legacy
	-I lib_inc/lwip
	-D STM32F469xx
	-D ARM_MATH_CM4
	-D __FPU_PRESENT
	-D USE_HAL_DRIVER
;	-D CES_DEMO
	-I include
	-I include/API
	-I src/user
	-I I1587
	-O1
	-Wno-comment
;	-Wl,-Map,OpenRTK.map
	-D GGA_UART2
;	-D INT_SEC_SEND
;	-D RTCM_UART2
;	-D COLLECT_DATA
;    -D USER_SN_WEB_NAME
;	-D VERSION1
	-D CALIBRATION
    -I src
	-I src/LWIP
	-I src/LWIP/arch
	-I src/LWIP/lwip-1.4.1/src/include
	-I src/LWIP/lwip-1.4.1/src/include/ipv4
	-I src/LWIP/lwip-1.4.1/src/include/netif
	-I src/LWIP/lwip_app/user/inc
	-I src/LWIP/lwip_app/webserver/inc
	-I src/LWIP/lwip_app/NtripClient/inc 
;	-Wl,-Tstm32f43x.ld
	-mthumb -mcpu=cortex-m4 -mfloat-abi=softfp -mfpu=fpv4-sp-d16

;upload_protocol = jlink
;debug_tool = jlink


